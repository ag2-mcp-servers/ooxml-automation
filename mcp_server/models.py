# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T08:40:39+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class ChartAxes(BaseModel):
    axisDataTypeId: Optional[int] = Field(None, title='Chart_Axes')
    chartsId: Optional[UUID] = Field(None, title='Chart_Axes')
    id: Optional[UUID] = Field(None, title='Chart_Axes')
    ooxmlId: Optional[int] = Field(None, title='Chart_Axes')


class ChartAxisDataTypes(BaseModel):
    description: Optional[str] = Field(None, title='Chart_AxisDataTypes')
    id: Optional[UUID] = Field(None, title='Chart_AxisDataTypes')
    name: Optional[str] = Field(None, title='Chart_AxisDataTypes')
    ooxmlName: Optional[str] = Field(None, title='Chart_AxisDataTypes')
    typeId: Optional[int] = Field(None, title='Chart_AxisDataTypes')


class ChartChartData(BaseModel):
    chartId: Optional[UUID] = Field(None, title='Chart_ChartData')
    id: Optional[UUID] = Field(None, title='Chart_ChartData')


class ChartChartDataDTO(BaseModel):
    categoryNames: Optional[List[str]] = None
    chartId: Optional[UUID] = None
    dataPoints: Optional[List[List[float]]] = None
    seriesNames: Optional[List[str]] = None


class ChartCharts(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Chart_Charts')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Chart_Charts')
    id: Optional[UUID] = Field(None, title='Chart_Charts')
    name: Optional[str] = Field(None, title='Chart_Charts')
    packageUri: Optional[str] = Field(None, title='Chart_Charts')
    parentGraphicId: Optional[UUID] = Field(None, title='Chart_Charts')
    svgBlobUrl: Optional[str] = Field(None, title='Chart_Charts')


class ChartColumnCollections(BaseModel):
    chartDataId: Optional[UUID] = Field(None, title='Chart_ColumnCollections')
    id: Optional[UUID] = Field(None, title='Chart_ColumnCollections')


class ChartColumns(BaseModel):
    axisId: Optional[UUID] = Field(None, title='Chart_Columns')
    columnCollectionId: Optional[UUID] = Field(None, title='Chart_Columns')
    id: Optional[UUID] = Field(None, title='Chart_Columns')
    index: Optional[int] = Field(None, title='Chart_Columns')
    name: Optional[str] = Field(None, title='Chart_Columns')


class ChartDataPoints(BaseModel):
    chartDataId: Optional[UUID] = Field(None, title='Chart_DataPoints')
    columnId: Optional[UUID] = Field(None, title='Chart_DataPoints')
    id: Optional[UUID] = Field(None, title='Chart_DataPoints')
    rowId: Optional[UUID] = Field(None, title='Chart_DataPoints')
    value: Optional[float] = Field(None, title='Chart_DataPoints')


class ChartPlotType(BaseModel):
    id: Optional[UUID] = Field(None, title='Chart_PlotType')
    plotQualifedAssy: Optional[str] = Field(None, title='Chart_PlotType')
    plotTypeName: Optional[str] = Field(None, title='Chart_PlotType')
    rowColTypeId: Optional[int] = Field(None, title='Chart_PlotType')
    typeId: Optional[int] = Field(None, title='Chart_PlotType')


class ChartRowCol(BaseModel):
    colName: Optional[str] = Field(None, title='Chart_RowCol')
    colQualifiedAssy: Optional[str] = Field(None, title='Chart_RowCol')
    id: Optional[UUID] = Field(None, title='Chart_RowCol')
    rowName: Optional[str] = Field(None, title='Chart_RowCol')
    rowQualifedAssy: Optional[str] = Field(None, title='Chart_RowCol')
    typeId: Optional[int] = Field(None, title='Chart_RowCol')


class ChartRowCollections(BaseModel):
    axisId: Optional[UUID] = Field(None, title='Chart_RowCollections')
    chartDataId: Optional[UUID] = Field(None, title='Chart_RowCollections')
    id: Optional[UUID] = Field(None, title='Chart_RowCollections')
    nameFormatType: Optional[int] = Field(None, title='Chart_RowCollections')


class ChartRowNameFormatTypes(BaseModel):
    formatCode: Optional[str] = Field(None, title='Chart_RowNameFormatTypes')
    id: Optional[UUID] = Field(None, title='Chart_RowNameFormatTypes')
    powerToolsId: Optional[int] = Field(None, title='Chart_RowNameFormatTypes')
    typeId: Optional[int] = Field(None, title='Chart_RowNameFormatTypes')


class ChartRows(BaseModel):
    id: Optional[UUID] = Field(None, title='Chart_Rows')
    index: Optional[int] = Field(None, title='Chart_Rows')
    name: Optional[str] = Field(None, title='Chart_Rows')
    rowNameCollectionId: Optional[UUID] = Field(None, title='Chart_Rows')


class ChildObjects(BaseModel):
    entityId: Optional[UUID] = None
    entityName: Optional[str] = None
    objectType: Optional[str] = None
    parentEntityId: Optional[UUID] = None
    parentObjectType: Optional[str] = None


class Document(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Document')
    blobLocation: Optional[str] = Field(None, title='Document')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Document')
    documentTypeId: Optional[int] = Field(None, title='Document')
    filename: Optional[str] = Field(None, title='Document')
    id: Optional[UUID] = Field(None, title='Document')
    name: Optional[str] = Field(None, title='Document')
    ownerGuid: Optional[UUID] = Field(None, title='Document')
    packageUri: Optional[str] = Field(None, title='Document')
    storyId: Optional[UUID] = Field(None, title='Document')
    tableStylesXmlBlobUrl: Optional[str] = Field(None, title='Document')
    title: Optional[str] = Field(None, title='Document')


class DocumentCloneDTO(BaseModel):
    id: Optional[UUID] = Field(None, title='DocumentCloneDTO')
    storyId: Optional[UUID] = Field(None, title='DocumentCloneDTO')


class DocumentType(BaseModel):
    description: Optional[str] = Field(None, title='DocumentType')
    fileExtension: Optional[str] = Field(None, title='DocumentType')
    id: Optional[UUID] = Field(None, title='DocumentType')
    mimeType: Optional[str] = Field(None, title='DocumentType')
    name: Optional[str] = Field(None, title='DocumentType')
    ooxmlPackageType: Optional[str] = Field(None, title='DocumentType')
    typeId: Optional[int] = Field(None, title='DocumentType')


class OoxmlDTO(BaseModel):
    id: Optional[UUID] = None
    openOfficeXml: Optional[str] = None
    type: Optional[str] = None


class ProblemDetails(BaseModel):
    detail: Optional[str] = None
    instance: Optional[str] = None
    status: Optional[int] = None
    title: Optional[str] = None
    type: Optional[str] = None


class SharedColorTransformationAttributes(BaseModel):
    colorTransformationsId: Optional[UUID] = Field(
        None, title='Shared_ColorTransformationAttributes'
    )
    id: Optional[UUID] = Field(None, title='Shared_ColorTransformationAttributes')
    name: Optional[str] = Field(None, title='Shared_ColorTransformationAttributes')
    value: Optional[str] = Field(None, title='Shared_ColorTransformationAttributes')


class SharedColorTransformations(BaseModel):
    id: Optional[UUID] = Field(None, title='Shared_ColorTransformations')
    name: Optional[str] = Field(None, title='Shared_ColorTransformations')
    solidFillsId: Optional[UUID] = Field(None, title='Shared_ColorTransformations')


class SharedColorTypes(BaseModel):
    colorSchemeIndexValueEnum: Optional[int] = Field(None, title='Shared_ColorTypes')
    description: Optional[str] = Field(None, title='Shared_ColorTypes')
    id: Optional[UUID] = Field(None, title='Shared_ColorTypes')
    name: Optional[str] = Field(None, title='Shared_ColorTypes')
    typeId: Optional[int] = Field(None, title='Shared_ColorTypes')


class SharedDashTypes(BaseModel):
    description: Optional[str] = Field(None, title='Shared_DashTypes')
    id: Optional[UUID] = Field(None, title='Shared_DashTypes')
    name: Optional[str] = Field(None, title='Shared_DashTypes')
    serializedAs: Optional[str] = Field(None, title='Shared_DashTypes')
    typeId: Optional[int] = Field(None, title='Shared_DashTypes')


class SharedEffectAttributes(BaseModel):
    attributesJson: Optional[str] = Field(None, title='Shared_EffectAttributes')
    effectId: Optional[UUID] = Field(None, title='Shared_EffectAttributes')
    effectTypeId: Optional[int] = Field(None, title='Shared_EffectAttributes')
    id: Optional[UUID] = Field(None, title='Shared_EffectAttributes')


class SharedEffectTypes(BaseModel):
    description: Optional[str] = Field(None, title='Shared_EffectTypes')
    id: Optional[UUID] = Field(None, title='Shared_EffectTypes')
    name: Optional[str] = Field(None, title='Shared_EffectTypes')
    typeId: Optional[int] = Field(None, title='Shared_EffectTypes')


class SharedEffects(BaseModel):
    connectorId: Optional[UUID] = Field(None, title='Shared_Effects')
    effectMapId: Optional[UUID] = Field(None, title='Shared_Effects')
    id: Optional[UUID] = Field(None, title='Shared_Effects')
    name: Optional[str] = Field(None, title='Shared_Effects')
    shapeId: Optional[UUID] = Field(None, title='Shared_Effects')


class SharedFillMap(BaseModel):
    connectorId: Optional[UUID] = Field(None, title='Shared_FillMap')
    effectAttributeId: Optional[UUID] = Field(None, title='Shared_FillMap')
    fillTypeId: Optional[int] = Field(None, title='Shared_FillMap')
    id: Optional[UUID] = Field(None, title='Shared_FillMap')
    shapeId: Optional[UUID] = Field(None, title='Shared_FillMap')
    tableCellId: Optional[UUID] = Field(None, title='Shared_FillMap')
    themeBackgroundFillId: Optional[UUID] = Field(None, title='Shared_FillMap')
    themeFillId: Optional[UUID] = Field(None, title='Shared_FillMap')


class SharedFillTypes(BaseModel):
    description: Optional[str] = Field(None, title='Shared_FillTypes')
    id: Optional[UUID] = Field(None, title='Shared_FillTypes')
    name: Optional[str] = Field(None, title='Shared_FillTypes')
    typeId: Optional[int] = Field(None, title='Shared_FillTypes')


class SharedGradientFills(BaseModel):
    angle: Optional[int] = Field(None, title='Shared_GradientFills')
    fillMapId: Optional[UUID] = Field(None, title='Shared_GradientFills')
    id: Optional[UUID] = Field(None, title='Shared_GradientFills')
    isPath: Optional[bool] = Field(None, title='Shared_GradientFills')
    pathType: Optional[str] = Field(None, title='Shared_GradientFills')
    rotateWithShape: Optional[bool] = Field(None, title='Shared_GradientFills')


class SharedGradientStops(BaseModel):
    gradientFillsId: Optional[UUID] = Field(None, title='Shared_GradientStops')
    id: Optional[UUID] = Field(None, title='Shared_GradientStops')
    position: Optional[int] = Field(None, title='Shared_GradientStops')


class SharedImageFills(BaseModel):
    compressionState: Optional[str] = Field(None, title='Shared_ImageFills')
    dpi: Optional[int] = Field(None, title='Shared_ImageFills')
    effectsJson: Optional[str] = Field(None, title='Shared_ImageFills')
    fillMapId: Optional[UUID] = Field(None, title='Shared_ImageFills')
    id: Optional[UUID] = Field(None, title='Shared_ImageFills')
    rotateWithShape: Optional[bool] = Field(None, title='Shared_ImageFills')
    sourceRectangle: Optional[str] = Field(None, title='Shared_ImageFills')
    stretch: Optional[bool] = Field(None, title='Shared_ImageFills')
    tile: Optional[str] = Field(None, title='Shared_ImageFills')


class SharedLineEndSizes(BaseModel):
    description: Optional[str] = Field(None, title='Shared_LineEndSizes')
    id: Optional[UUID] = Field(None, title='Shared_LineEndSizes')
    name: Optional[str] = Field(None, title='Shared_LineEndSizes')
    serializedAs: Optional[str] = Field(None, title='Shared_LineEndSizes')
    typeId: Optional[int] = Field(None, title='Shared_LineEndSizes')


class SharedLineEndTypes(BaseModel):
    description: Optional[str] = Field(None, title='Shared_LineEndTypes')
    id: Optional[UUID] = Field(None, title='Shared_LineEndTypes')
    name: Optional[str] = Field(None, title='Shared_LineEndTypes')
    serializedAs: Optional[str] = Field(None, title='Shared_LineEndTypes')
    typeId: Optional[int] = Field(None, title='Shared_LineEndTypes')


class SharedLines(BaseModel):
    bLtoTRBorderId: Optional[UUID] = Field(None, title='Shared_Lines')
    bottomBorderId: Optional[UUID] = Field(None, title='Shared_Lines')
    connectorId: Optional[UUID] = Field(None, title='Shared_Lines')
    dashTypeId: Optional[int] = Field(None, title='Shared_Lines')
    headEndHeightId: Optional[int] = Field(None, title='Shared_Lines')
    headEndTypeId: Optional[int] = Field(None, title='Shared_Lines')
    headEndWidthId: Optional[int] = Field(None, title='Shared_Lines')
    id: Optional[UUID] = Field(None, title='Shared_Lines')
    leftBorderId: Optional[UUID] = Field(None, title='Shared_Lines')
    lineMapId: Optional[UUID] = Field(None, title='Shared_Lines')
    rightBorderId: Optional[UUID] = Field(None, title='Shared_Lines')
    shapeId: Optional[UUID] = Field(None, title='Shared_Lines')
    tLtoBRBorderId: Optional[UUID] = Field(None, title='Shared_Lines')
    tailEndHeightId: Optional[int] = Field(None, title='Shared_Lines')
    tailEndTypeId: Optional[int] = Field(None, title='Shared_Lines')
    tailEndWidthId: Optional[int] = Field(None, title='Shared_Lines')
    topBorderId: Optional[UUID] = Field(None, title='Shared_Lines')
    weight: Optional[int] = Field(None, title='Shared_Lines')


class SharedParagraph(BaseModel):
    id: Optional[UUID] = Field(None, title='Shared_Paragraph')
    number: Optional[int] = Field(None, title='Shared_Paragraph')
    textContainerId: Optional[UUID] = Field(None, title='Shared_Paragraph')


class SharedPictures(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Shared_Pictures')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Shared_Pictures')
    fileExtension: Optional[str] = Field(None, title='Shared_Pictures')
    graphicsId: Optional[UUID] = Field(None, title='Shared_Pictures')
    id: Optional[UUID] = Field(None, title='Shared_Pictures')
    imageFileBlobUrl: Optional[str] = Field(None, title='Shared_Pictures')
    imageFillsId: Optional[UUID] = Field(None, title='Shared_Pictures')
    name: Optional[str] = Field(None, title='Shared_Pictures')
    packageUri: Optional[str] = Field(None, title='Shared_Pictures')


class SharedSolidFills(BaseModel):
    colorTypeId: Optional[int] = Field(None, title='Shared_SolidFills')
    fillMapId: Optional[UUID] = Field(None, title='Shared_SolidFills')
    hexValue: Optional[str] = Field(None, title='Shared_SolidFills')
    id: Optional[UUID] = Field(None, title='Shared_SolidFills')
    isUserColor: Optional[bool] = Field(None, title='Shared_SolidFills')
    parentGradientStopId: Optional[UUID] = Field(None, title='Shared_SolidFills')
    parentLineId: Optional[UUID] = Field(None, title='Shared_SolidFills')
    parentTextId: Optional[UUID] = Field(None, title='Shared_SolidFills')


class SharedText(BaseModel):
    colorSolidFillsId: Optional[UUID] = Field(None, title='Shared_Text')
    font: Optional[str] = Field(None, title='Shared_Text')
    fontSize: Optional[int] = Field(None, title='Shared_Text')
    id: Optional[UUID] = Field(None, title='Shared_Text')
    isBold: Optional[bool] = Field(None, title='Shared_Text')
    isItalic: Optional[bool] = Field(None, title='Shared_Text')
    isThemeFont: Optional[bool] = Field(None, title='Shared_Text')
    isUnderline: Optional[bool] = Field(None, title='Shared_Text')
    paragraphId: Optional[UUID] = Field(None, title='Shared_Text')
    rawText: Optional[str] = Field(None, title='Shared_Text')
    sequence: Optional[int] = Field(None, title='Shared_Text')


class SharedTextContainer(BaseModel):
    axisId: Optional[UUID] = Field(None, title='Shared_TextContainer')
    chartId: Optional[UUID] = Field(None, title='Shared_TextContainer')
    id: Optional[UUID] = Field(None, title='Shared_TextContainer')
    outerXml: Optional[str] = Field(None, title='Shared_TextContainer')
    shapeId: Optional[UUID] = Field(None, title='Shared_TextContainer')
    tableCellId: Optional[UUID] = Field(None, title='Shared_TextContainer')


class SlideColorMaps(BaseModel):
    accent1: Optional[int] = Field(None, title='Slide_ColorMaps')
    accent2: Optional[int] = Field(None, title='Slide_ColorMaps')
    accent3: Optional[int] = Field(None, title='Slide_ColorMaps')
    accent4: Optional[int] = Field(None, title='Slide_ColorMaps')
    accent5: Optional[int] = Field(None, title='Slide_ColorMaps')
    accent6: Optional[int] = Field(None, title='Slide_ColorMaps')
    background1: Optional[int] = Field(None, title='Slide_ColorMaps')
    background2: Optional[int] = Field(None, title='Slide_ColorMaps')
    followedHyperlink: Optional[int] = Field(None, title='Slide_ColorMaps')
    hyperlink: Optional[int] = Field(None, title='Slide_ColorMaps')
    id: Optional[UUID] = Field(None, title='Slide_ColorMaps')
    slideMasterId: Optional[UUID] = Field(None, title='Slide_ColorMaps')
    text1: Optional[int] = Field(None, title='Slide_ColorMaps')
    text2: Optional[int] = Field(None, title='Slide_ColorMaps')


class SlideConnector(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Connector')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Connector')
    endConnectionIdx: Optional[int] = Field(None, title='Slide_Connector')
    endConnectionShapeId: Optional[UUID] = Field(None, title='Slide_Connector')
    flipHorizontal: Optional[bool] = Field(None, title='Slide_Connector')
    flipVertical: Optional[bool] = Field(None, title='Slide_Connector')
    freeFormPathXml: Optional[str] = Field(None, title='Slide_Connector')
    groupElementsId: Optional[UUID] = Field(None, title='Slide_Connector')
    hidden: Optional[bool] = Field(None, title='Slide_Connector')
    id: Optional[UUID] = Field(None, title='Slide_Connector')
    isThemeEffect: Optional[bool] = Field(None, title='Slide_Connector')
    isThemeFill: Optional[bool] = Field(None, title='Slide_Connector')
    isThemeLine: Optional[bool] = Field(None, title='Slide_Connector')
    name: Optional[str] = Field(None, title='Slide_Connector')
    ooxmlId: Optional[int] = Field(None, title='Slide_Connector')
    packageUri: Optional[str] = Field(None, title='Slide_Connector')
    presetTypeId: Optional[str] = Field(None, title='Slide_Connector')
    rotation: Optional[int] = Field(None, title='Slide_Connector')
    startConnectionIdx: Optional[int] = Field(None, title='Slide_Connector')
    startConnectionShapeId: Optional[UUID] = Field(None, title='Slide_Connector')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Connector')


class SlideGraphicTypes(BaseModel):
    description: Optional[str] = Field(None, title='Slide_GraphicTypes')
    id: Optional[UUID] = Field(None, title='Slide_GraphicTypes')
    name: Optional[str] = Field(None, title='Slide_GraphicTypes')
    typeId: Optional[int] = Field(None, title='Slide_GraphicTypes')


class SlideGraphics(BaseModel):
    graphicTypeId: Optional[int] = Field(None, title='Slide_Graphics')
    groupElementsId: Optional[UUID] = Field(None, title='Slide_Graphics')
    height: Optional[int] = Field(None, title='Slide_Graphics')
    id: Optional[UUID] = Field(None, title='Slide_Graphics')
    name: Optional[str] = Field(None, title='Slide_Graphics')
    ooxmlId: Optional[int] = Field(None, title='Slide_Graphics')
    width: Optional[int] = Field(None, title='Slide_Graphics')
    xOffset: Optional[int] = Field(None, title='Slide_Graphics')
    yOffset: Optional[int] = Field(None, title='Slide_Graphics')


class SlideGroupElementTypes(BaseModel):
    description: Optional[str] = Field(None, title='Slide_GroupElementTypes')
    id: Optional[UUID] = Field(None, title='Slide_GroupElementTypes')
    name: Optional[str] = Field(None, title='Slide_GroupElementTypes')
    typeId: Optional[int] = Field(None, title='Slide_GroupElementTypes')


class SlideGroupElementTypesDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(
        None, title='Slide_GroupElementTypes_Details'
    )
    dateModified: Optional[datetime] = Field(
        None, title='Slide_GroupElementTypes_Details'
    )
    description: Optional[str] = Field(None, title='Slide_GroupElementTypes_Details')
    id: Optional[UUID] = Field(None, title='Slide_GroupElementTypes_Details')
    name: Optional[str] = Field(None, title='Slide_GroupElementTypes_Details')
    typeId: Optional[int] = Field(None, title='Slide_GroupElementTypes_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_GroupElementTypes_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_GroupElementTypes_Details')


class SlideGroupElements(BaseModel):
    groupElementTypeId: Optional[int] = Field(None, title='Slide_GroupElements')
    groupElementTypePk: Optional[UUID] = Field(None, title='Slide_GroupElements')
    id: Optional[UUID] = Field(None, title='Slide_GroupElements')
    parentGroupElementId: Optional[UUID] = Field(None, title='Slide_GroupElements')
    shapeTreeId: Optional[UUID] = Field(None, title='Slide_GroupElements')
    ultimateParentShapeTreeId: Optional[UUID] = Field(None, title='Slide_GroupElements')


class SlideGroups(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Groups')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Groups')
    groupElementId: Optional[UUID] = Field(None, title='Slide_Groups')
    hidden: Optional[bool] = Field(None, title='Slide_Groups')
    id: Optional[UUID] = Field(None, title='Slide_Groups')
    name: Optional[str] = Field(None, title='Slide_Groups')
    ooxmlId: Optional[int] = Field(None, title='Slide_Groups')
    packageUri: Optional[str] = Field(None, title='Slide_Groups')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Groups')
    title: Optional[str] = Field(None, title='Slide_Groups')


class SlideShapeTrees(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_ShapeTrees')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_ShapeTrees')
    groupElementId: Optional[UUID] = Field(None, title='Slide_ShapeTrees')
    hidden: Optional[bool] = Field(None, title='Slide_ShapeTrees')
    id: Optional[UUID] = Field(None, title='Slide_ShapeTrees')
    name: Optional[str] = Field(None, title='Slide_ShapeTrees')
    ooxmlId: Optional[int] = Field(None, title='Slide_ShapeTrees')
    packageUri: Optional[str] = Field(None, title='Slide_ShapeTrees')
    slideId: Optional[UUID] = Field(None, title='Slide_ShapeTrees')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_ShapeTrees')
    title: Optional[str] = Field(None, title='Slide_ShapeTrees')


class SlideShapes(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Shapes')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Shapes')
    flipHorizontal: Optional[bool] = Field(None, title='Slide_Shapes')
    flipVertical: Optional[bool] = Field(None, title='Slide_Shapes')
    freeFormPathXml: Optional[str] = Field(None, title='Slide_Shapes')
    groupElementsId: Optional[UUID] = Field(None, title='Slide_Shapes')
    height: Optional[int] = Field(None, title='Slide_Shapes')
    hidden: Optional[bool] = Field(None, title='Slide_Shapes')
    id: Optional[UUID] = Field(None, title='Slide_Shapes')
    isThemeEffect: Optional[bool] = Field(None, title='Slide_Shapes')
    isThemeFill: Optional[bool] = Field(None, title='Slide_Shapes')
    isThemeLine: Optional[bool] = Field(None, title='Slide_Shapes')
    name: Optional[str] = Field(None, title='Slide_Shapes')
    ooxmlId: Optional[int] = Field(None, title='Slide_Shapes')
    packageUri: Optional[str] = Field(None, title='Slide_Shapes')
    presetTypeId: Optional[str] = Field(None, title='Slide_Shapes')
    rotation: Optional[int] = Field(None, title='Slide_Shapes')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Shapes')
    width: Optional[int] = Field(None, title='Slide_Shapes')
    xOffset: Optional[int] = Field(None, title='Slide_Shapes')
    yOffset: Optional[int] = Field(None, title='Slide_Shapes')


class SlideSlideMasters(BaseModel):
    id: Optional[UUID] = Field(None, title='Slide_SlideMasters')
    slideId: Optional[UUID] = Field(None, title='Slide_SlideMasters')


class SlideSlides(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Slides')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Slides')
    documentId: Optional[UUID] = Field(None, title='Slide_Slides')
    id: Optional[UUID] = Field(None, title='Slide_Slides')
    name: Optional[str] = Field(None, title='Slide_Slides')
    number: Optional[int] = Field(None, title='Slide_Slides')
    ooxmlId: Optional[int] = Field(None, title='Slide_Slides')
    packageUri: Optional[str] = Field(None, title='Slide_Slides')
    slideDocumentUrl: Optional[str] = Field(None, title='Slide_Slides')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Slides')


class SlideSmartArts(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_SmartArts')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_SmartArts')
    graphicsId: Optional[UUID] = Field(None, title='Slide_SmartArts')
    id: Optional[UUID] = Field(None, title='Slide_SmartArts')
    name: Optional[str] = Field(None, title='Slide_SmartArts')
    packageUri: Optional[str] = Field(None, title='Slide_SmartArts')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_SmartArts')


class TableBorders(BaseModel):
    cellId: Optional[UUID] = Field(None, title='Table_Borders')
    id: Optional[UUID] = Field(None, title='Table_Borders')


class TableCells(BaseModel):
    columnId: Optional[UUID] = Field(None, title='Table_Cells')
    columnSpan: Optional[int] = Field(None, title='Table_Cells')
    id: Optional[UUID] = Field(None, title='Table_Cells')
    isMergedHorozontal: Optional[bool] = Field(None, title='Table_Cells')
    isMergedVertical: Optional[bool] = Field(None, title='Table_Cells')
    rowId: Optional[UUID] = Field(None, title='Table_Cells')
    rowSpan: Optional[int] = Field(None, title='Table_Cells')


class TableColumns(BaseModel):
    id: Optional[UUID] = Field(None, title='Table_Columns')
    index: Optional[int] = Field(None, title='Table_Columns')
    tableId: Optional[UUID] = Field(None, title='Table_Columns')
    width: Optional[int] = Field(None, title='Table_Columns')


class TableRows(BaseModel):
    height: Optional[int] = Field(None, title='Table_Rows')
    id: Optional[UUID] = Field(None, title='Table_Rows')
    index: Optional[int] = Field(None, title='Table_Rows')
    tableId: Optional[UUID] = Field(None, title='Table_Rows')


class TableTableDataDTO(BaseModel):
    tableData: Optional[List[List[str]]] = None
    tableId: Optional[UUID] = None


class TableTables(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Table_Tables')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Table_Tables')
    hasStylePart: Optional[bool] = Field(None, title='Table_Tables')
    id: Optional[UUID] = Field(None, title='Table_Tables')
    name: Optional[str] = Field(None, title='Table_Tables')
    packageUri: Optional[str] = Field(None, title='Table_Tables')
    parentGraphicId: Optional[UUID] = Field(None, title='Table_Tables')
    stylePartOuterXml: Optional[str] = Field(None, title='Table_Tables')
    svgBlobUrl: Optional[str] = Field(None, title='Table_Tables')


class ThemeBackgroundFills(BaseModel):
    id: Optional[UUID] = Field(None, title='Theme_BackgroundFills')
    intensityId: Optional[int] = Field(None, title='Theme_BackgroundFills')
    themeId: Optional[UUID] = Field(None, title='Theme_BackgroundFills')


class ThemeColors(BaseModel):
    accent1: Optional[str] = Field(None, title='Theme_Colors')
    accent2: Optional[str] = Field(None, title='Theme_Colors')
    accent3: Optional[str] = Field(None, title='Theme_Colors')
    accent4: Optional[str] = Field(None, title='Theme_Colors')
    accent5: Optional[str] = Field(None, title='Theme_Colors')
    accent6: Optional[str] = Field(None, title='Theme_Colors')
    dark1: Optional[str] = Field(None, title='Theme_Colors')
    dark2: Optional[str] = Field(None, title='Theme_Colors')
    followedHyperlink: Optional[str] = Field(None, title='Theme_Colors')
    hyperlink: Optional[str] = Field(None, title='Theme_Colors')
    id: Optional[UUID] = Field(None, title='Theme_Colors')
    light1: Optional[str] = Field(None, title='Theme_Colors')
    light2: Optional[str] = Field(None, title='Theme_Colors')
    name: Optional[str] = Field(None, title='Theme_Colors')
    themeId: Optional[UUID] = Field(None, title='Theme_Colors')


class ThemeCustomColors(BaseModel):
    hexValue: Optional[str] = Field(None, title='Theme_CustomColors')
    id: Optional[UUID] = Field(None, title='Theme_CustomColors')
    name: Optional[str] = Field(None, title='Theme_CustomColors')
    themeId: Optional[UUID] = Field(None, title='Theme_CustomColors')


class ThemeEffectMap(BaseModel):
    id: Optional[UUID] = Field(None, title='Theme_EffectMap')
    intensityId: Optional[int] = Field(None, title='Theme_EffectMap')
    themeId: Optional[UUID] = Field(None, title='Theme_EffectMap')


class ThemeFills(BaseModel):
    id: Optional[UUID] = Field(None, title='Theme_Fills')
    intensityId: Optional[int] = Field(None, title='Theme_Fills')
    themeId: Optional[UUID] = Field(None, title='Theme_Fills')


class ThemeFonts(BaseModel):
    bodyFont: Optional[str] = Field(None, title='Theme_Fonts')
    headingFont: Optional[str] = Field(None, title='Theme_Fonts')
    id: Optional[UUID] = Field(None, title='Theme_Fonts')
    themeId: Optional[UUID] = Field(None, title='Theme_Fonts')


class ThemeIntensity(BaseModel):
    description: Optional[str] = Field(None, title='Theme_Intensity')
    id: Optional[UUID] = Field(None, title='Theme_Intensity')
    name: Optional[str] = Field(None, title='Theme_Intensity')
    typeId: Optional[int] = Field(None, title='Theme_Intensity')


class ThemeLineMap(BaseModel):
    id: Optional[UUID] = Field(None, title='Theme_LineMap')
    intensityId: Optional[int] = Field(None, title='Theme_LineMap')
    themeId: Optional[UUID] = Field(None, title='Theme_LineMap')


class ThemeThemes(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Theme_Themes')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Theme_Themes')
    id: Optional[UUID] = Field(None, title='Theme_Themes')
    name: Optional[str] = Field(None, title='Theme_Themes')
    packageUri: Optional[str] = Field(None, title='Theme_Themes')
    slideId: Optional[UUID] = Field(None, title='Theme_Themes')


class ChartsAxisDataTypesGetResponse(RootModel[List[ChartAxisDataTypes]]):
    root: List[ChartAxisDataTypes]


class ChartsChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class ChartsPlotTypeGetResponse(RootModel[List[ChartPlotType]]):
    root: List[ChartPlotType]


class ChartsRowColGetResponse(RootModel[List[ChartRowCol]]):
    root: List[ChartRowCol]


class ChartsRowNameFormatTypesGetResponse(RootModel[List[ChartRowNameFormatTypes]]):
    root: List[ChartRowNameFormatTypes]


class ConnectionShapesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class DocumentsPostRequest(BaseModel):
    file: bytes = Field(
        ...,
        description='The file to upload.  Must be of type .pptx, ppt',
        title='Story File',
    )
    storyId: UUID = Field(
        ...,
        description='The story_id of the document being uploaded.',
        title='Story Id',
    )


class DocumentsPostResponse(RootModel[List[Document]]):
    root: List[Document]


class DocumentsChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class DocumentsDocumentTypeGetResponse(RootModel[List[DocumentType]]):
    root: List[DocumentType]


class GroupsChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class ImagesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class ShapeTreesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class ShapesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class SharedColorTypesGetResponse(RootModel[List[SharedColorTypes]]):
    root: List[SharedColorTypes]


class SharedDashTypesGetResponse(RootModel[List[SharedDashTypes]]):
    root: List[SharedDashTypes]


class SharedEffectTypesGetResponse(RootModel[List[SharedEffectTypes]]):
    root: List[SharedEffectTypes]


class SharedFillTypesGetResponse(RootModel[List[SharedFillTypes]]):
    root: List[SharedFillTypes]


class SharedLineEndSizesGetResponse(RootModel[List[SharedLineEndSizes]]):
    root: List[SharedLineEndSizes]


class SharedLineEndTypesGetResponse(RootModel[List[SharedLineEndTypes]]):
    root: List[SharedLineEndTypes]


class SlidesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class SlidesGraphicTypesGetResponse(RootModel[List[SlideGraphicTypes]]):
    root: List[SlideGraphicTypes]


class SlidesGroupElementTypesGetResponse(RootModel[List[SlideGroupElementTypes]]):
    root: List[SlideGroupElementTypes]


class SmartArtsChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class TablesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class ThemesChildObjectsIdGetResponse(RootModel[List[ChildObjects]]):
    root: List[ChildObjects]


class ThemesIntensityGetResponse(RootModel[List[ThemeIntensity]]):
    root: List[ThemeIntensity]


class ChartAxesDetails(BaseModel):
    axisDataTypeId: Optional[int] = Field(None, title='Chart_Axes_Details')
    chart: Optional[ChartChartsDetails] = None
    chartsId: Optional[UUID] = Field(None, title='Chart_Axes_Details')
    dateCreated: Optional[datetime] = Field(None, title='Chart_Axes_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_Axes_Details')
    id: Optional[UUID] = Field(None, title='Chart_Axes_Details')
    ooxmlId: Optional[int] = Field(None, title='Chart_Axes_Details')
    titleTextContainer: Optional[SharedTextContainerDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Chart_Axes_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_Axes_Details')


class ChartChartDataDetails(BaseModel):
    chart: Optional[ChartChartsDetails] = None
    chartId: Optional[UUID] = Field(None, title='Chart_ChartData_Details')
    columnCollection: Optional[ChartColumnCollectionsDetails] = None
    dataPoints: Optional[List[ChartDataPointsDetails]] = Field(
        None, title='Chart_ChartData_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Chart_ChartData_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_ChartData_Details')
    id: Optional[UUID] = Field(None, title='Chart_ChartData_Details')
    rowCollection: Optional[ChartRowCollectionsDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Chart_ChartData_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_ChartData_Details')


class ChartChartsDetails(BaseModel):
    axes: Optional[List[ChartAxesDetails]] = Field(None, title='Chart_Charts_Details')
    baseElementBlobUrl: Optional[str] = Field(None, title='Chart_Charts_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Chart_Charts_Details')
    chartData: Optional[ChartChartDataDetails] = None
    dateCreated: Optional[datetime] = Field(None, title='Chart_Charts_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_Charts_Details')
    id: Optional[UUID] = Field(None, title='Chart_Charts_Details')
    name: Optional[str] = Field(None, title='Chart_Charts_Details')
    packageUri: Optional[str] = Field(None, title='Chart_Charts_Details')
    parentGraphic: Optional[SlideGraphicsDetails] = None
    parentGraphicId: Optional[UUID] = Field(None, title='Chart_Charts_Details')
    svgBlobUrl: Optional[str] = Field(None, title='Chart_Charts_Details')
    titleTextContainer: Optional[SharedTextContainerDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Chart_Charts_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_Charts_Details')


class ChartColumnCollectionsDetails(BaseModel):
    chartData: Optional[ChartChartDataDetails] = None
    chartDataId: Optional[UUID] = Field(None, title='Chart_ColumnCollections_Details')
    columns: Optional[List[ChartColumnsDetails]] = Field(
        None, title='Chart_ColumnCollections_Details'
    )
    dateCreated: Optional[datetime] = Field(
        None, title='Chart_ColumnCollections_Details'
    )
    dateModified: Optional[datetime] = Field(
        None, title='Chart_ColumnCollections_Details'
    )
    id: Optional[UUID] = Field(None, title='Chart_ColumnCollections_Details')
    userCreated: Optional[UUID] = Field(None, title='Chart_ColumnCollections_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_ColumnCollections_Details')


class ChartColumnsDetails(BaseModel):
    axis: Optional[ChartAxesDetails] = None
    axisId: Optional[UUID] = Field(None, title='Chart_Columns_Details')
    columnCollection: Optional[ChartColumnCollectionsDetails] = None
    columnCollectionId: Optional[UUID] = Field(None, title='Chart_Columns_Details')
    dateCreated: Optional[datetime] = Field(None, title='Chart_Columns_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_Columns_Details')
    id: Optional[UUID] = Field(None, title='Chart_Columns_Details')
    index: Optional[int] = Field(None, title='Chart_Columns_Details')
    name: Optional[str] = Field(None, title='Chart_Columns_Details')
    userCreated: Optional[UUID] = Field(None, title='Chart_Columns_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_Columns_Details')


class ChartDataPointsDetails(BaseModel):
    chartData: Optional[ChartChartDataDetails] = None
    chartDataId: Optional[UUID] = Field(None, title='Chart_DataPoints_Details')
    column: Optional[ChartColumnsDetails] = None
    columnId: Optional[UUID] = Field(None, title='Chart_DataPoints_Details')
    dateCreated: Optional[datetime] = Field(None, title='Chart_DataPoints_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_DataPoints_Details')
    id: Optional[UUID] = Field(None, title='Chart_DataPoints_Details')
    row: Optional[ChartRowsDetails] = None
    rowId: Optional[UUID] = Field(None, title='Chart_DataPoints_Details')
    userCreated: Optional[UUID] = Field(None, title='Chart_DataPoints_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_DataPoints_Details')
    value: Optional[float] = Field(None, title='Chart_DataPoints_Details')


class ChartRowCollectionsDetails(BaseModel):
    axis: Optional[ChartAxesDetails] = None
    axisId: Optional[UUID] = Field(None, title='Chart_RowCollections_Details')
    chartData: Optional[ChartChartDataDetails] = None
    chartDataId: Optional[UUID] = Field(None, title='Chart_RowCollections_Details')
    dateCreated: Optional[datetime] = Field(None, title='Chart_RowCollections_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_RowCollections_Details')
    id: Optional[UUID] = Field(None, title='Chart_RowCollections_Details')
    nameFormatType: Optional[int] = Field(None, title='Chart_RowCollections_Details')
    rows: Optional[List[ChartRowsDetails]] = Field(
        None, title='Chart_RowCollections_Details'
    )
    userCreated: Optional[UUID] = Field(None, title='Chart_RowCollections_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_RowCollections_Details')


class ChartRowsDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Chart_Rows_Details')
    dateModified: Optional[datetime] = Field(None, title='Chart_Rows_Details')
    id: Optional[UUID] = Field(None, title='Chart_Rows_Details')
    index: Optional[int] = Field(None, title='Chart_Rows_Details')
    name: Optional[str] = Field(None, title='Chart_Rows_Details')
    rowNameCollection: Optional[ChartRowCollectionsDetails] = None
    rowNameCollectionId: Optional[UUID] = Field(None, title='Chart_Rows_Details')
    userCreated: Optional[UUID] = Field(None, title='Chart_Rows_Details')
    userModified: Optional[UUID] = Field(None, title='Chart_Rows_Details')


class DocumentDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Document_Details')
    blobLocation: Optional[str] = Field(None, title='Document_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Document_Details')
    dateCreated: Optional[datetime] = Field(None, title='Document_Details')
    dateModified: Optional[datetime] = Field(None, title='Document_Details')
    documentTypeId: Optional[int] = Field(None, title='Document_Details')
    filename: Optional[str] = Field(None, title='Document_Details')
    id: Optional[UUID] = Field(None, title='Document_Details')
    name: Optional[str] = Field(None, title='Document_Details')
    ownerGuid: Optional[UUID] = Field(None, title='Document_Details')
    packageUri: Optional[str] = Field(None, title='Document_Details')
    slides: Optional[List[SlideSlidesDetails]] = Field(None, title='Document_Details')
    storyId: Optional[UUID] = Field(None, title='Document_Details')
    tableStylesXmlBlobUrl: Optional[str] = Field(None, title='Document_Details')
    title: Optional[str] = Field(None, title='Document_Details')
    userCreated: Optional[UUID] = Field(None, title='Document_Details')
    userModified: Optional[UUID] = Field(None, title='Document_Details')


class SharedColorTransformationAttributesDetails(BaseModel):
    colorTransformation: Optional[SharedColorTransformationsDetails] = None
    colorTransformationsId: Optional[UUID] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    dateCreated: Optional[datetime] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    dateModified: Optional[datetime] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    id: Optional[UUID] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    name: Optional[str] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    userCreated: Optional[UUID] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    userModified: Optional[UUID] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )
    value: Optional[str] = Field(
        None, title='Shared_ColorTransformationAttributes_Details'
    )


class SharedColorTransformationsDetails(BaseModel):
    colorTransformationAttributes: Optional[
        List[SharedColorTransformationAttributesDetails]
    ] = Field(None, title='Shared_ColorTransformations_Details')
    dateCreated: Optional[datetime] = Field(
        None, title='Shared_ColorTransformations_Details'
    )
    dateModified: Optional[datetime] = Field(
        None, title='Shared_ColorTransformations_Details'
    )
    id: Optional[UUID] = Field(None, title='Shared_ColorTransformations_Details')
    name: Optional[str] = Field(None, title='Shared_ColorTransformations_Details')
    parentSolidFill: Optional[SharedSolidFillsDetails] = None
    solidFillsId: Optional[UUID] = Field(
        None, title='Shared_ColorTransformations_Details'
    )
    userCreated: Optional[UUID] = Field(
        None, title='Shared_ColorTransformations_Details'
    )
    userModified: Optional[UUID] = Field(
        None, title='Shared_ColorTransformations_Details'
    )


class SharedEffectAttributesDetails(BaseModel):
    attributesJson: Optional[str] = Field(None, title='Shared_EffectAttributes_Details')
    dateCreated: Optional[datetime] = Field(
        None, title='Shared_EffectAttributes_Details'
    )
    dateModified: Optional[datetime] = Field(
        None, title='Shared_EffectAttributes_Details'
    )
    effect: Optional[SharedEffectsDetails] = None
    effectId: Optional[UUID] = Field(None, title='Shared_EffectAttributes_Details')
    effectTypeId: Optional[int] = Field(None, title='Shared_EffectAttributes_Details')
    fillMap: Optional[SharedFillMapDetails] = None
    id: Optional[UUID] = Field(None, title='Shared_EffectAttributes_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_EffectAttributes_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_EffectAttributes_Details')


class SharedEffectsDetails(BaseModel):
    connectorId: Optional[UUID] = Field(None, title='Shared_Effects_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_Effects_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_Effects_Details')
    effectAttributes: Optional[List[SharedEffectAttributesDetails]] = Field(
        None, title='Shared_Effects_Details'
    )
    effectMap: Optional[ThemeEffectMapDetails] = None
    effectMapId: Optional[UUID] = Field(None, title='Shared_Effects_Details')
    id: Optional[UUID] = Field(None, title='Shared_Effects_Details')
    name: Optional[str] = Field(None, title='Shared_Effects_Details')
    parentConnector: Optional[SlideConnectorDetails] = None
    parentShape: Optional[SlideShapesDetails] = None
    shapeId: Optional[UUID] = Field(None, title='Shared_Effects_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_Effects_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_Effects_Details')


class SharedFillMapDetails(BaseModel):
    connector: Optional[SlideConnectorDetails] = None
    connectorId: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_FillMap_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_FillMap_Details')
    effectAttribute: Optional[SharedEffectAttributesDetails] = None
    effectAttributeId: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    fillTypeId: Optional[int] = Field(None, title='Shared_FillMap_Details')
    gradientFill: Optional[SharedGradientFillsDetails] = None
    id: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    imageFill: Optional[SharedImageFillsDetails] = None
    shape: Optional[SlideShapesDetails] = None
    shapeId: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    solidFill: Optional[SharedSolidFillsDetails] = None
    tableCell: Optional[TableCellsDetails] = None
    tableCellId: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    themeBackgroundFill: Optional[ThemeBackgroundFillsDetails] = None
    themeBackgroundFillId: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    themeFill: Optional[ThemeFillsDetails] = None
    themeFillId: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_FillMap_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_FillMap_Details')


class SharedGradientFillsDetails(BaseModel):
    angle: Optional[int] = Field(None, title='Shared_GradientFills_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_GradientFills_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_GradientFills_Details')
    fillMap: Optional[SharedFillMapDetails] = None
    fillMapId: Optional[UUID] = Field(None, title='Shared_GradientFills_Details')
    gradientStops: Optional[List[SharedGradientStopsDetails]] = Field(
        None, title='Shared_GradientFills_Details'
    )
    id: Optional[UUID] = Field(None, title='Shared_GradientFills_Details')
    isPath: Optional[bool] = Field(None, title='Shared_GradientFills_Details')
    pathType: Optional[str] = Field(None, title='Shared_GradientFills_Details')
    rotateWithShape: Optional[bool] = Field(None, title='Shared_GradientFills_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_GradientFills_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_GradientFills_Details')


class SharedGradientStopsDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Shared_GradientStops_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_GradientStops_Details')
    gradientFill: Optional[SharedGradientFillsDetails] = None
    gradientFillsId: Optional[UUID] = Field(None, title='Shared_GradientStops_Details')
    id: Optional[UUID] = Field(None, title='Shared_GradientStops_Details')
    position: Optional[int] = Field(None, title='Shared_GradientStops_Details')
    solidFill: Optional[SharedSolidFillsDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Shared_GradientStops_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_GradientStops_Details')


class SharedImageFillsDetails(BaseModel):
    compressionState: Optional[str] = Field(None, title='Shared_ImageFills_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_ImageFills_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_ImageFills_Details')
    dpi: Optional[int] = Field(None, title='Shared_ImageFills_Details')
    effectsJson: Optional[str] = Field(None, title='Shared_ImageFills_Details')
    fillMap: Optional[SharedFillMapDetails] = None
    fillMapId: Optional[UUID] = Field(None, title='Shared_ImageFills_Details')
    id: Optional[UUID] = Field(None, title='Shared_ImageFills_Details')
    picture: Optional[SharedPicturesDetails] = None
    rotateWithShape: Optional[bool] = Field(None, title='Shared_ImageFills_Details')
    sourceRectangle: Optional[str] = Field(None, title='Shared_ImageFills_Details')
    stretch: Optional[bool] = Field(None, title='Shared_ImageFills_Details')
    tile: Optional[str] = Field(None, title='Shared_ImageFills_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_ImageFills_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_ImageFills_Details')


class SharedLinesDetails(BaseModel):
    bLtoTRBorder: Optional[TableBordersDetails] = None
    bLtoTRBorderId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    bottomBorder: Optional[TableBordersDetails] = None
    bottomBorderId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    connectorId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    dashTypeId: Optional[int] = Field(None, title='Shared_Lines_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_Lines_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_Lines_Details')
    headEndHeightId: Optional[int] = Field(None, title='Shared_Lines_Details')
    headEndTypeId: Optional[int] = Field(None, title='Shared_Lines_Details')
    headEndWidthId: Optional[int] = Field(None, title='Shared_Lines_Details')
    id: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    leftBorder: Optional[TableBordersDetails] = None
    leftBorderId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    lineColorSolidFill: Optional[SharedSolidFillsDetails] = None
    lineMap: Optional[ThemeLineMapDetails] = None
    lineMapId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    parentConnector: Optional[SlideConnectorDetails] = None
    parentShape: Optional[SlideShapesDetails] = None
    rightBorder: Optional[TableBordersDetails] = None
    rightBorderId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    shapeId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    tLtoBRBorder: Optional[TableBordersDetails] = None
    tLtoBRBorderId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    tailEndHeightId: Optional[int] = Field(None, title='Shared_Lines_Details')
    tailEndTypeId: Optional[int] = Field(None, title='Shared_Lines_Details')
    tailEndWidthId: Optional[int] = Field(None, title='Shared_Lines_Details')
    topBorder: Optional[TableBordersDetails] = None
    topBorderId: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_Lines_Details')
    weight: Optional[int] = Field(None, title='Shared_Lines_Details')


class SharedParagraphDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Shared_Paragraph_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_Paragraph_Details')
    id: Optional[UUID] = Field(None, title='Shared_Paragraph_Details')
    number: Optional[int] = Field(None, title='Shared_Paragraph_Details')
    text: Optional[List[SharedTextDetails]] = Field(
        None, title='Shared_Paragraph_Details'
    )
    textContainer: Optional[SharedTextContainerDetails] = None
    textContainerId: Optional[UUID] = Field(None, title='Shared_Paragraph_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_Paragraph_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_Paragraph_Details')


class SharedPicturesDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Shared_Pictures_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(
        None, title='Shared_Pictures_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Shared_Pictures_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_Pictures_Details')
    fileExtension: Optional[str] = Field(None, title='Shared_Pictures_Details')
    graphicsId: Optional[UUID] = Field(None, title='Shared_Pictures_Details')
    id: Optional[UUID] = Field(None, title='Shared_Pictures_Details')
    imageFileBlobUrl: Optional[str] = Field(None, title='Shared_Pictures_Details')
    imageFill: Optional[SharedImageFillsDetails] = None
    imageFillsId: Optional[UUID] = Field(None, title='Shared_Pictures_Details')
    name: Optional[str] = Field(None, title='Shared_Pictures_Details')
    packageUri: Optional[str] = Field(None, title='Shared_Pictures_Details')
    parentGraphic: Optional[SlideGraphicsDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Shared_Pictures_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_Pictures_Details')


class SharedSolidFillsDetails(BaseModel):
    colorTransformations: Optional[SharedColorTransformationsDetails] = None
    colorTypeId: Optional[int] = Field(None, title='Shared_SolidFills_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_SolidFills_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_SolidFills_Details')
    fillMapId: Optional[UUID] = Field(None, title='Shared_SolidFills_Details')
    hexValue: Optional[str] = Field(None, title='Shared_SolidFills_Details')
    id: Optional[UUID] = Field(None, title='Shared_SolidFills_Details')
    isUserColor: Optional[bool] = Field(None, title='Shared_SolidFills_Details')
    parentFillMap: Optional[SharedFillMapDetails] = None
    parentGradientStop: Optional[SharedGradientStopsDetails] = None
    parentGradientStopId: Optional[UUID] = Field(
        None, title='Shared_SolidFills_Details'
    )
    parentLine: Optional[SharedLinesDetails] = None
    parentLineId: Optional[UUID] = Field(None, title='Shared_SolidFills_Details')
    parentText: Optional[SharedTextDetails] = None
    parentTextId: Optional[UUID] = Field(None, title='Shared_SolidFills_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_SolidFills_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_SolidFills_Details')


class SharedTextDetails(BaseModel):
    colorSolidFill: Optional[SharedSolidFillsDetails] = None
    colorSolidFillsId: Optional[UUID] = Field(None, title='Shared_Text_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_Text_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_Text_Details')
    font: Optional[str] = Field(None, title='Shared_Text_Details')
    fontSize: Optional[int] = Field(None, title='Shared_Text_Details')
    id: Optional[UUID] = Field(None, title='Shared_Text_Details')
    isBold: Optional[bool] = Field(None, title='Shared_Text_Details')
    isItalic: Optional[bool] = Field(None, title='Shared_Text_Details')
    isThemeFont: Optional[bool] = Field(None, title='Shared_Text_Details')
    isUnderline: Optional[bool] = Field(None, title='Shared_Text_Details')
    paragraph: Optional[SharedParagraphDetails] = None
    paragraphId: Optional[UUID] = Field(None, title='Shared_Text_Details')
    rawText: Optional[str] = Field(None, title='Shared_Text_Details')
    sequence: Optional[int] = Field(None, title='Shared_Text_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_Text_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_Text_Details')


class SharedTextContainerDetails(BaseModel):
    axis: Optional[ChartAxesDetails] = None
    axisId: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')
    chart: Optional[ChartChartsDetails] = None
    chartId: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')
    dateCreated: Optional[datetime] = Field(None, title='Shared_TextContainer_Details')
    dateModified: Optional[datetime] = Field(None, title='Shared_TextContainer_Details')
    id: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')
    outerXml: Optional[str] = Field(None, title='Shared_TextContainer_Details')
    paragraphs: Optional[List[SharedParagraphDetails]] = Field(
        None, title='Shared_TextContainer_Details'
    )
    parentShape: Optional[SlideShapesDetails] = None
    shapeId: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')
    tableCell: Optional[TableCellsDetails] = None
    tableCellId: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')
    userCreated: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')
    userModified: Optional[UUID] = Field(None, title='Shared_TextContainer_Details')


class SlideColorMapsDetails(BaseModel):
    accent1: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    accent2: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    accent3: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    accent4: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    accent5: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    accent6: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    background1: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    background2: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    dateCreated: Optional[datetime] = Field(None, title='Slide_ColorMaps_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_ColorMaps_Details')
    followedHyperlink: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    hyperlink: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    id: Optional[UUID] = Field(None, title='Slide_ColorMaps_Details')
    slideMaster: Optional[SlideSlideMastersDetails] = None
    slideMasterId: Optional[UUID] = Field(None, title='Slide_ColorMaps_Details')
    text1: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    text2: Optional[int] = Field(None, title='Slide_ColorMaps_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_ColorMaps_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_ColorMaps_Details')


class SlideConnectorDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Connector_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(
        None, title='Slide_Connector_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Slide_Connector_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_Connector_Details')
    effect: Optional[SharedEffectsDetails] = None
    endConnectionIdx: Optional[int] = Field(None, title='Slide_Connector_Details')
    endConnectionShape: Optional[SlideShapesDetails] = None
    endConnectionShapeId: Optional[UUID] = Field(None, title='Slide_Connector_Details')
    fillMap: Optional[SharedFillMapDetails] = None
    flipHorizontal: Optional[bool] = Field(None, title='Slide_Connector_Details')
    flipVertical: Optional[bool] = Field(None, title='Slide_Connector_Details')
    freeFormPathXml: Optional[str] = Field(None, title='Slide_Connector_Details')
    groupElement: Optional[SlideGroupElementsDetails] = None
    groupElementsId: Optional[UUID] = Field(None, title='Slide_Connector_Details')
    hidden: Optional[bool] = Field(None, title='Slide_Connector_Details')
    id: Optional[UUID] = Field(None, title='Slide_Connector_Details')
    isThemeEffect: Optional[bool] = Field(None, title='Slide_Connector_Details')
    isThemeFill: Optional[bool] = Field(None, title='Slide_Connector_Details')
    isThemeLine: Optional[bool] = Field(None, title='Slide_Connector_Details')
    line: Optional[SharedLinesDetails] = None
    name: Optional[str] = Field(None, title='Slide_Connector_Details')
    ooxmlId: Optional[int] = Field(None, title='Slide_Connector_Details')
    packageUri: Optional[str] = Field(None, title='Slide_Connector_Details')
    presetTypeId: Optional[str] = Field(None, title='Slide_Connector_Details')
    rotation: Optional[int] = Field(None, title='Slide_Connector_Details')
    startConnectionIdx: Optional[int] = Field(None, title='Slide_Connector_Details')
    startConnectionShape: Optional[SlideShapesDetails] = None
    startConnectionShapeId: Optional[UUID] = Field(
        None, title='Slide_Connector_Details'
    )
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Connector_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_Connector_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_Connector_Details')


class SlideGraphicsDetails(BaseModel):
    chart: Optional[ChartChartsDetails] = None
    dateCreated: Optional[datetime] = Field(None, title='Slide_Graphics_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_Graphics_Details')
    graphicTypeId: Optional[int] = Field(None, title='Slide_Graphics_Details')
    groupElement: Optional[SlideGroupElementsDetails] = None
    groupElementsId: Optional[UUID] = Field(
        None,
        description='Foreign key to the GroupElements object',
        title='Slide_Graphics_Details',
    )
    height: Optional[int] = Field(None, title='Slide_Graphics_Details')
    id: Optional[UUID] = Field(None, title='Slide_Graphics_Details')
    name: Optional[str] = Field(None, title='Slide_Graphics_Details')
    ooxmlId: Optional[int] = Field(None, title='Slide_Graphics_Details')
    picture: Optional[SharedPicturesDetails] = None
    smartArt: Optional[SlideSmartArtsDetails] = None
    table: Optional[TableTablesDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Slide_Graphics_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_Graphics_Details')
    width: Optional[int] = Field(None, title='Slide_Graphics_Details')
    xOffset: Optional[int] = Field(None, title='Slide_Graphics_Details')
    yOffset: Optional[int] = Field(None, title='Slide_Graphics_Details')


class SlideGroupElementsDetails(BaseModel):
    childGroupElements: Optional[List[SlideGroupElementsDetails]] = Field(
        None, title='Slide_GroupElements_Details'
    )
    connector: Optional[SlideConnectorDetails] = None
    dateCreated: Optional[datetime] = Field(None, title='Slide_GroupElements_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_GroupElements_Details')
    graphic: Optional[SlideGraphicsDetails] = None
    group: Optional[SlideGroupsDetails] = None
    groupElementTypeId: Optional[int] = Field(None, title='Slide_GroupElements_Details')
    groupElementTypePk: Optional[UUID] = Field(
        None, title='Slide_GroupElements_Details'
    )
    id: Optional[UUID] = Field(None, title='Slide_GroupElements_Details')
    parentGroupElement: Optional[SlideGroupElementsDetails] = None
    parentGroupElementId: Optional[UUID] = Field(
        None, title='Slide_GroupElements_Details'
    )
    shape: Optional[SlideShapesDetails] = None
    shapeTree: Optional[SlideShapeTreesDetails] = None
    shapeTreeId: Optional[UUID] = Field(None, title='Slide_GroupElements_Details')
    typeInfo: Optional[SlideGroupElementTypesDetails] = None
    ultimateParentShapeTreeId: Optional[UUID] = Field(
        None, title='Slide_GroupElements_Details'
    )
    userCreated: Optional[UUID] = Field(None, title='Slide_GroupElements_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_GroupElements_Details')


class SlideGroupsDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Groups_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Groups_Details')
    dateCreated: Optional[datetime] = Field(None, title='Slide_Groups_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_Groups_Details')
    groupElement: Optional[SlideGroupElementsDetails] = None
    groupElementId: Optional[UUID] = Field(None, title='Slide_Groups_Details')
    hidden: Optional[bool] = Field(None, title='Slide_Groups_Details')
    id: Optional[UUID] = Field(None, title='Slide_Groups_Details')
    name: Optional[str] = Field(None, title='Slide_Groups_Details')
    ooxmlId: Optional[int] = Field(None, title='Slide_Groups_Details')
    packageUri: Optional[str] = Field(None, title='Slide_Groups_Details')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Groups_Details')
    title: Optional[str] = Field(None, title='Slide_Groups_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_Groups_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_Groups_Details')


class SlideShapeTreesDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_ShapeTrees_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(
        None, title='Slide_ShapeTrees_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Slide_ShapeTrees_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_ShapeTrees_Details')
    groupElement: Optional[SlideGroupElementsDetails] = None
    groupElementId: Optional[UUID] = Field(None, title='Slide_ShapeTrees_Details')
    groupElements: Optional[List[SlideGroupElementsDetails]] = Field(
        None, title='Slide_ShapeTrees_Details'
    )
    hidden: Optional[bool] = Field(None, title='Slide_ShapeTrees_Details')
    id: Optional[UUID] = Field(None, title='Slide_ShapeTrees_Details')
    name: Optional[str] = Field(None, title='Slide_ShapeTrees_Details')
    ooxmlId: Optional[int] = Field(None, title='Slide_ShapeTrees_Details')
    packageUri: Optional[str] = Field(None, title='Slide_ShapeTrees_Details')
    slide: Optional[SlideSlidesDetails] = None
    slideId: Optional[UUID] = Field(None, title='Slide_ShapeTrees_Details')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_ShapeTrees_Details')
    title: Optional[str] = Field(None, title='Slide_ShapeTrees_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_ShapeTrees_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_ShapeTrees_Details')


class SlideShapesDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Shapes_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Shapes_Details')
    dateCreated: Optional[datetime] = Field(None, title='Slide_Shapes_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_Shapes_Details')
    effect: Optional[SharedEffectsDetails] = None
    fillMap: Optional[SharedFillMapDetails] = None
    flipHorizontal: Optional[bool] = Field(None, title='Slide_Shapes_Details')
    flipVertical: Optional[bool] = Field(None, title='Slide_Shapes_Details')
    freeFormPathXml: Optional[str] = Field(None, title='Slide_Shapes_Details')
    groupElement: Optional[SlideGroupElementsDetails] = None
    groupElementsId: Optional[UUID] = Field(None, title='Slide_Shapes_Details')
    height: Optional[int] = Field(None, title='Slide_Shapes_Details')
    hidden: Optional[bool] = Field(None, title='Slide_Shapes_Details')
    id: Optional[UUID] = Field(None, title='Slide_Shapes_Details')
    isThemeEffect: Optional[bool] = Field(None, title='Slide_Shapes_Details')
    isThemeFill: Optional[bool] = Field(None, title='Slide_Shapes_Details')
    isThemeLine: Optional[bool] = Field(None, title='Slide_Shapes_Details')
    line: Optional[SharedLinesDetails] = None
    name: Optional[str] = Field(None, title='Slide_Shapes_Details')
    ooxmlId: Optional[int] = Field(None, title='Slide_Shapes_Details')
    packageUri: Optional[str] = Field(None, title='Slide_Shapes_Details')
    presetTypeId: Optional[str] = Field(None, title='Slide_Shapes_Details')
    rotation: Optional[int] = Field(None, title='Slide_Shapes_Details')
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Shapes_Details')
    textContainer: Optional[SharedTextContainerDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Slide_Shapes_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_Shapes_Details')
    width: Optional[int] = Field(None, title='Slide_Shapes_Details')
    xOffset: Optional[int] = Field(None, title='Slide_Shapes_Details')
    yOffset: Optional[int] = Field(None, title='Slide_Shapes_Details')


class SlideSlideMastersDetails(BaseModel):
    colorMap: Optional[SlideColorMapsDetails] = None
    dateCreated: Optional[datetime] = Field(None, title='Slide_SlideMasters_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_SlideMasters_Details')
    id: Optional[UUID] = Field(None, title='Slide_SlideMasters_Details')
    parentSlide: Optional[SlideSlidesDetails] = None
    slideId: Optional[UUID] = Field(None, title='Slide_SlideMasters_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_SlideMasters_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_SlideMasters_Details')


class SlideSlidesDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_Slides_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Slide_Slides_Details')
    dateCreated: Optional[datetime] = Field(None, title='Slide_Slides_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_Slides_Details')
    document: Optional[DocumentDetails] = None
    documentId: Optional[UUID] = Field(None, title='Slide_Slides_Details')
    id: Optional[UUID] = Field(None, title='Slide_Slides_Details')
    name: Optional[str] = Field(None, title='Slide_Slides_Details')
    number: Optional[int] = Field(None, title='Slide_Slides_Details')
    ooxmlId: Optional[int] = Field(None, title='Slide_Slides_Details')
    packageUri: Optional[str] = Field(None, title='Slide_Slides_Details')
    shapeTree: Optional[SlideShapeTreesDetails] = None
    slideDocumentUrl: Optional[str] = Field(None, title='Slide_Slides_Details')
    slideMaster: Optional[SlideSlideMastersDetails] = None
    svgBlobUrl: Optional[str] = Field(None, title='Slide_Slides_Details')
    theme: Optional[ThemeThemesDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Slide_Slides_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_Slides_Details')


class SlideSmartArtsDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Slide_SmartArts_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(
        None, title='Slide_SmartArts_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Slide_SmartArts_Details')
    dateModified: Optional[datetime] = Field(None, title='Slide_SmartArts_Details')
    graphicsId: Optional[UUID] = Field(None, title='Slide_SmartArts_Details')
    id: Optional[UUID] = Field(None, title='Slide_SmartArts_Details')
    name: Optional[str] = Field(None, title='Slide_SmartArts_Details')
    packageUri: Optional[str] = Field(None, title='Slide_SmartArts_Details')
    parentGraphic: Optional[SlideGraphicsDetails] = None
    svgBlobUrl: Optional[str] = Field(None, title='Slide_SmartArts_Details')
    userCreated: Optional[UUID] = Field(None, title='Slide_SmartArts_Details')
    userModified: Optional[UUID] = Field(None, title='Slide_SmartArts_Details')


class TableBordersDetails(BaseModel):
    bLtoTR: Optional[SharedLinesDetails] = None
    bottom: Optional[SharedLinesDetails] = None
    cell: Optional[TableCellsDetails] = None
    cellId: Optional[UUID] = Field(None, title='Table_Borders_Details')
    dateCreated: Optional[datetime] = Field(None, title='Table_Borders_Details')
    dateModified: Optional[datetime] = Field(None, title='Table_Borders_Details')
    id: Optional[UUID] = Field(None, title='Table_Borders_Details')
    left: Optional[SharedLinesDetails] = None
    right: Optional[SharedLinesDetails] = None
    tLtoBR: Optional[SharedLinesDetails] = None
    top: Optional[SharedLinesDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Table_Borders_Details')
    userModified: Optional[UUID] = Field(None, title='Table_Borders_Details')


class TableCellsDetails(BaseModel):
    border: Optional[TableBordersDetails] = None
    column: Optional[TableColumnsDetails] = None
    columnId: Optional[UUID] = Field(None, title='Table_Cells_Details')
    columnSpan: Optional[int] = Field(None, title='Table_Cells_Details')
    dateCreated: Optional[datetime] = Field(None, title='Table_Cells_Details')
    dateModified: Optional[datetime] = Field(None, title='Table_Cells_Details')
    fillMap: Optional[SharedFillMapDetails] = None
    id: Optional[UUID] = Field(None, title='Table_Cells_Details')
    isMergedHorozontal: Optional[bool] = Field(None, title='Table_Cells_Details')
    isMergedVertical: Optional[bool] = Field(None, title='Table_Cells_Details')
    row: Optional[TableRowsDetails] = None
    rowId: Optional[UUID] = Field(None, title='Table_Cells_Details')
    rowSpan: Optional[int] = Field(None, title='Table_Cells_Details')
    textContainer: Optional[SharedTextContainerDetails] = None
    userCreated: Optional[UUID] = Field(None, title='Table_Cells_Details')
    userModified: Optional[UUID] = Field(None, title='Table_Cells_Details')


class TableColumnsDetails(BaseModel):
    cells: Optional[List[TableCellsDetails]] = Field(
        None, title='Table_Columns_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Table_Columns_Details')
    dateModified: Optional[datetime] = Field(None, title='Table_Columns_Details')
    id: Optional[UUID] = Field(None, title='Table_Columns_Details')
    index: Optional[int] = Field(None, title='Table_Columns_Details')
    table: Optional[TableTablesDetails] = None
    tableId: Optional[UUID] = Field(None, title='Table_Columns_Details')
    userCreated: Optional[UUID] = Field(None, title='Table_Columns_Details')
    userModified: Optional[UUID] = Field(None, title='Table_Columns_Details')
    width: Optional[int] = Field(None, title='Table_Columns_Details')


class TableRowsDetails(BaseModel):
    cells: Optional[List[TableCellsDetails]] = Field(None, title='Table_Rows_Details')
    dateCreated: Optional[datetime] = Field(None, title='Table_Rows_Details')
    dateModified: Optional[datetime] = Field(None, title='Table_Rows_Details')
    height: Optional[int] = Field(None, title='Table_Rows_Details')
    id: Optional[UUID] = Field(None, title='Table_Rows_Details')
    index: Optional[int] = Field(None, title='Table_Rows_Details')
    table: Optional[TableTablesDetails] = None
    tableId: Optional[UUID] = Field(None, title='Table_Rows_Details')
    userCreated: Optional[UUID] = Field(None, title='Table_Rows_Details')
    userModified: Optional[UUID] = Field(None, title='Table_Rows_Details')


class TableTablesDetails(BaseModel):
    baseElementBlobUrl: Optional[str] = Field(None, title='Table_Tables_Details')
    cells: Optional[List[TableCellsDetails]] = Field(None, title='Table_Tables_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Table_Tables_Details')
    columns: Optional[List[TableColumnsDetails]] = Field(
        None, title='Table_Tables_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Table_Tables_Details')
    dateModified: Optional[datetime] = Field(None, title='Table_Tables_Details')
    hasStylePart: Optional[bool] = Field(None, title='Table_Tables_Details')
    id: Optional[UUID] = Field(None, title='Table_Tables_Details')
    name: Optional[str] = Field(None, title='Table_Tables_Details')
    packageUri: Optional[str] = Field(None, title='Table_Tables_Details')
    parentGraphic: Optional[SlideGraphicsDetails] = None
    parentGraphicId: Optional[UUID] = Field(None, title='Table_Tables_Details')
    rows: Optional[List[TableRowsDetails]] = Field(None, title='Table_Tables_Details')
    stylePartOuterXml: Optional[str] = Field(None, title='Table_Tables_Details')
    svgBlobUrl: Optional[str] = Field(None, title='Table_Tables_Details')
    userCreated: Optional[UUID] = Field(None, title='Table_Tables_Details')
    userModified: Optional[UUID] = Field(None, title='Table_Tables_Details')


class ThemeBackgroundFillsDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Theme_BackgroundFills_Details')
    dateModified: Optional[datetime] = Field(
        None, title='Theme_BackgroundFills_Details'
    )
    fillMap: Optional[SharedFillMapDetails] = None
    id: Optional[UUID] = Field(None, title='Theme_BackgroundFills_Details')
    intensityId: Optional[int] = Field(None, title='Theme_BackgroundFills_Details')
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_BackgroundFills_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_BackgroundFills_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_BackgroundFills_Details')


class ThemeColorsDetails(BaseModel):
    accent1: Optional[str] = Field(None, title='Theme_Colors_Details')
    accent2: Optional[str] = Field(None, title='Theme_Colors_Details')
    accent3: Optional[str] = Field(None, title='Theme_Colors_Details')
    accent4: Optional[str] = Field(None, title='Theme_Colors_Details')
    accent5: Optional[str] = Field(None, title='Theme_Colors_Details')
    accent6: Optional[str] = Field(None, title='Theme_Colors_Details')
    dark1: Optional[str] = Field(None, title='Theme_Colors_Details')
    dark2: Optional[str] = Field(None, title='Theme_Colors_Details')
    dateCreated: Optional[datetime] = Field(None, title='Theme_Colors_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_Colors_Details')
    followedHyperlink: Optional[str] = Field(None, title='Theme_Colors_Details')
    hyperlink: Optional[str] = Field(None, title='Theme_Colors_Details')
    id: Optional[UUID] = Field(None, title='Theme_Colors_Details')
    light1: Optional[str] = Field(None, title='Theme_Colors_Details')
    light2: Optional[str] = Field(None, title='Theme_Colors_Details')
    name: Optional[str] = Field(None, title='Theme_Colors_Details')
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_Colors_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_Colors_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_Colors_Details')


class ThemeCustomColorsDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Theme_CustomColors_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_CustomColors_Details')
    hexValue: Optional[str] = Field(None, title='Theme_CustomColors_Details')
    id: Optional[UUID] = Field(None, title='Theme_CustomColors_Details')
    name: Optional[str] = Field(None, title='Theme_CustomColors_Details')
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_CustomColors_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_CustomColors_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_CustomColors_Details')


class ThemeEffectMapDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Theme_EffectMap_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_EffectMap_Details')
    effect: Optional[SharedEffectsDetails] = None
    id: Optional[UUID] = Field(None, title='Theme_EffectMap_Details')
    intensityId: Optional[int] = Field(None, title='Theme_EffectMap_Details')
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_EffectMap_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_EffectMap_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_EffectMap_Details')


class ThemeFillsDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Theme_Fills_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_Fills_Details')
    fillMap: Optional[SharedFillMapDetails] = None
    id: Optional[UUID] = Field(None, title='Theme_Fills_Details')
    intensityId: Optional[int] = Field(None, title='Theme_Fills_Details')
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_Fills_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_Fills_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_Fills_Details')


class ThemeFontsDetails(BaseModel):
    bodyFont: Optional[str] = Field(None, title='Theme_Fonts_Details')
    dateCreated: Optional[datetime] = Field(None, title='Theme_Fonts_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_Fonts_Details')
    headingFont: Optional[str] = Field(None, title='Theme_Fonts_Details')
    id: Optional[UUID] = Field(None, title='Theme_Fonts_Details')
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_Fonts_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_Fonts_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_Fonts_Details')


class ThemeLineMapDetails(BaseModel):
    dateCreated: Optional[datetime] = Field(None, title='Theme_LineMap_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_LineMap_Details')
    id: Optional[UUID] = Field(None, title='Theme_LineMap_Details')
    intensityId: Optional[int] = Field(None, title='Theme_LineMap_Details')
    line: Optional[SharedLinesDetails] = None
    theme: Optional[ThemeThemesDetails] = None
    themeId: Optional[UUID] = Field(None, title='Theme_LineMap_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_LineMap_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_LineMap_Details')


class ThemeThemesDetails(BaseModel):
    backgroundFills: Optional[List[ThemeBackgroundFillsDetails]] = Field(
        None, title='Theme_Themes_Details'
    )
    baseElementBlobUrl: Optional[str] = Field(None, title='Theme_Themes_Details')
    changedBaseElementBlobUrl: Optional[str] = Field(None, title='Theme_Themes_Details')
    colors: Optional[ThemeColorsDetails] = None
    customColors: Optional[List[ThemeCustomColorsDetails]] = Field(
        None, title='Theme_Themes_Details'
    )
    dateCreated: Optional[datetime] = Field(None, title='Theme_Themes_Details')
    dateModified: Optional[datetime] = Field(None, title='Theme_Themes_Details')
    effectMaps: Optional[List[ThemeEffectMapDetails]] = Field(
        None, title='Theme_Themes_Details'
    )
    fills: Optional[List[ThemeFillsDetails]] = Field(None, title='Theme_Themes_Details')
    fonts: Optional[ThemeFontsDetails] = None
    id: Optional[UUID] = Field(None, title='Theme_Themes_Details')
    lineMaps: Optional[List[ThemeLineMapDetails]] = Field(
        None, title='Theme_Themes_Details'
    )
    name: Optional[str] = Field(None, title='Theme_Themes_Details')
    packageUri: Optional[str] = Field(None, title='Theme_Themes_Details')
    slide: Optional[SlideSlidesDetails] = None
    slideId: Optional[UUID] = Field(None, title='Theme_Themes_Details')
    userCreated: Optional[UUID] = Field(None, title='Theme_Themes_Details')
    userModified: Optional[UUID] = Field(None, title='Theme_Themes_Details')


ChartAxesDetails.model_rebuild()
ChartChartDataDetails.model_rebuild()
ChartChartsDetails.model_rebuild()
ChartColumnCollectionsDetails.model_rebuild()
ChartDataPointsDetails.model_rebuild()
ChartRowCollectionsDetails.model_rebuild()
DocumentDetails.model_rebuild()
SharedColorTransformationAttributesDetails.model_rebuild()
SharedColorTransformationsDetails.model_rebuild()
SharedEffectAttributesDetails.model_rebuild()
SharedEffectsDetails.model_rebuild()
SharedFillMapDetails.model_rebuild()
SharedGradientFillsDetails.model_rebuild()
SharedGradientStopsDetails.model_rebuild()
SharedImageFillsDetails.model_rebuild()
SharedLinesDetails.model_rebuild()
SharedParagraphDetails.model_rebuild()
SharedPicturesDetails.model_rebuild()
SharedSolidFillsDetails.model_rebuild()
SharedTextContainerDetails.model_rebuild()
SlideColorMapsDetails.model_rebuild()
SlideConnectorDetails.model_rebuild()
SlideGraphicsDetails.model_rebuild()
SlideGroupElementsDetails.model_rebuild()
SlideShapeTreesDetails.model_rebuild()
SlideSlideMastersDetails.model_rebuild()
SlideSlidesDetails.model_rebuild()
TableBordersDetails.model_rebuild()
TableCellsDetails.model_rebuild()
TableColumnsDetails.model_rebuild()
TableRowsDetails.model_rebuild()
ThemeBackgroundFillsDetails.model_rebuild()
ThemeColorsDetails.model_rebuild()
ThemeCustomColorsDetails.model_rebuild()
ThemeEffectMapDetails.model_rebuild()
ThemeFillsDetails.model_rebuild()
ThemeFontsDetails.model_rebuild()
ThemeLineMapDetails.model_rebuild()
